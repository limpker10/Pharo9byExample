Object subclass: #Counter	instanceVariableNames: 'count'	classVariableNames: ''	package: 'MyCounter'!!Counter commentStamp: 'JoseMiguelCano 11/16/2022 19:22' prior: 0!`Counter` es una clase concreta simple que admite incrementos y decrementos. Su API es - `decrement` and `increment`- `count`Su mensaje de creaci√≥n es `start At:`!!Counter methodsFor: 'initialization' stamp: 'JoseMiguelCano 11/16/2022 19:58'!initialize 	count := 0.! !!Counter methodsFor: 'accessing' stamp: 'JoseMiguelCano 11/16/2022 19:24'!count	^ count! !!Counter methodsFor: 'accessing' stamp: 'JoseMiguelCano 11/16/2022 19:28'!count: unNumero	count := unNumero! !!Counter methodsFor: 'operations' stamp: 'JoseMiguelCano 11/16/2022 19:45'!increment	count := count + 1.! !!Counter methodsFor: 'operations' stamp: 'JoseMiguelCano 11/16/2022 19:46'!decrement	count := count - 1! !!Counter methodsFor: 'printing' stamp: 'JoseMiguelCano 11/16/2022 19:59'!printOn: aStream	super printOn: aStream.	aStream		nextPutAll: ' with value: ';		nextPutAll: count printString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Counter class	instanceVariableNames: ''!!Counter class methodsFor: 'accessing' stamp: 'JoseMiguelCano 11/16/2022 19:53'!startingAt: anInteger	^ self new count: anInteger.! !TestCase subclass: #CounterTest	instanceVariableNames: ''	classVariableNames: ''	package: 'MyCounter'!!CounterTest methodsFor: 'tests' stamp: 'JoseMiguelCano 11/16/2022 19:51'!testInitializeself assert: Counter new count equals: 0! !!CounterTest methodsFor: 'tests' stamp: 'JoseMiguelCano 11/16/2022 19:55'!testAlternateCreationMethodself assert: ((Counter startingAt: 19) increment ; count) equals: 20! !!CounterTest methodsFor: 'tests' stamp: 'JoseMiguelCano 11/16/2022 19:42'!testCountIsSetAndRead	| c |	c := Counter new.	c count: 7.	self assert: c count equals: 7! !!CounterTest methodsFor: 'tests' stamp: 'JoseMiguelCano 11/16/2022 19:44'!testIncrement| c |c := Counter new.c count: 0 ; increment; increment.self assert: c count equals: 2! !!CounterTest methodsFor: 'tests' stamp: 'JoseMiguelCano 11/16/2022 19:48'!testDecrement| c |c := Counter new.c count: 3 ; decrement; decrement.self assert: c count equals: 1! !